package com.bdqn.service.impl;

import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;

import com.bdqn.common.PageBean;
import com.bdqn.dao.OrderDao;
import com.bdqn.dao.OrderItemDao;
import com.bdqn.dao.ProductDao;
import com.bdqn.entity.Order;
import com.bdqn.entity.OrderItem;
import com.bdqn.service.OrderService;

public class OrderServiceImpl implements OrderService {

	private OrderDao orderDao;
	private OrderItemDao orderItemDao;
	public void setOrderDao(OrderDao orderDao) {
		this.orderDao = orderDao;
	}
	private ProductDao productDao;
	@Override
	public PageBean<Order> findByPage(Integer page) {
		PageBean<Order> pageBean = new PageBean<>();
		//设置页数
		pageBean.setPage(page);
		int limit = 10;
		pageBean.setLimit(limit);
		
		int totalCount = orderDao.findCount();
		pageBean.setTotalCount(totalCount);
		
		int totalPage = 0;
		totalPage = (totalCount+limit-1)/limit;
		pageBean.setTotalPage(totalPage);
		
		int begin = (page -1)*limit;
		List<Order> list = orderDao.findByPage(begin,limit);
		pageBean.setList(list);
		
		return pageBean;
	}

	
	@Override
	public List<OrderItem> findByOrderItem(Integer oid) {
		return orderDao.findByOrderItem(oid);
	}

	@Override
	public void update(Order order) {
		orderDao.update(order);
	}

	@Override
	public Order findByOid(Integer oid) {
		return orderDao.findByOid(oid);
	}
<<<<<<< .mine

	@Override
	public void save(Order order) {
		
		orderDao.save(order);
	}
	
	public int findLastInsertIntoId(){
		return orderDao.findLastInsertIntoId();
	}

	@Override
	public PageBean<Order> findByPageWithUid(Integer page, int uid) {
		PageBean<Order> pageBean = new PageBean<>();
		//设置页数
		pageBean.setPage(page);
		int limit = 10;
		pageBean.setLimit(limit);
		
		int totalCount = orderDao.findCountByUid(uid);
		pageBean.setTotalCount(totalCount);
		
		int totalPage = 0;
		totalPage = (totalCount+limit-1)/limit;
		pageBean.setTotalPage(totalPage);
		
		int begin = (page -1)*limit;
		List<Order> list = orderDao.findByPageWithState(begin, limit, uid);
		
		for (Order order : list) {
			Set<OrderItem> orderItems =new LinkedHashSet<>();
			List<OrderItem> list2 = orderItemDao.findByOid(order.getOid());
			for (OrderItem orderItem : list2) {
				orderItems.add(orderItem);
			}
			order.setOrderItems(orderItems);
		}
		pageBean.setList(list);
		
		return pageBean;
	}

	public OrderItemDao getOrderItemDao() {
		return orderItemDao;
	}

	public void setOrderItemDao(OrderItemDao orderItemDao) {
		this.orderItemDao = orderItemDao;
	}


	public ProductDao getProductDao() {
		return productDao;
	}


	public void setProductDao(ProductDao productDao) {
		this.productDao = productDao;
	}
=======

	@Override
	public List<Order> findByState(Integer state) {
		return orderDao.findByState(state);
	}
>>>>>>> .r54
}
