<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
       					   http://www.springframework.org/schema/beans/spring-beans.xsd
       					   http://www.springframework.org/schema/tx 
       					   http://www.springframework.org/schema/tx/spring-tx.xsd
       					   http://www.springframework.org/schema/aop 
       					   http://www.springframework.org/schema/aop/spring-aop.xsd
       					   http://www.springframework.org/schema/context 
       					   http://www.springframework.org/schema/context/spring-context.xsd">
      <!-- 加载jdbc属性文件 -->
      <context:property-placeholder location="classpath:jdbc.properties"/>
       <!-- 数据源 -->
       <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
       		<property name="driverClass" value="${driverClass}"></property>
       		<property name="jdbcUrl" value="${jdbcUrl}"></property>
       		<property name="user" value="${user}"></property>
       		<property name="password" value="${password}"></property>
       		
       </bean>
       <!-- spring框架用于整合Hibernate的工厂 -->
       <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
       		<property name="dataSource" ref="dataSource"></property>
       		<!-- 注入Hibernate相关属性 -->
       		<property name="hibernateProperties">
       			<props>
       				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
       				<prop key="hibernate.show_sql">true</prop>
       				<prop key="hibernate.format_sql">true</prop>
       				<prop key="hibernate.hbm2ddl.auto">update</prop>
       			</props>
       		</property>
       		<!-- 注入Hibernate的映射文件 -->
       		<property name="mappingDirectoryLocations">
       			<list>
       				<value>classpath:com/itheima/bos/domain</value>
       			</list>
       		</property>
       </bean>
       <!-- 事务管理器 -->
       <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
       		<property name="sessionFactory" ref="sessionFactory"></property>
       </bean>
       
       <!-- 组建扫描 -->
       <context:component-scan base-package="com.itheima.bos"/>
       
       <!-- 引入注解解析器 -->
       <context:annotation-config/>
       
       <!-- 事物注解 -->
       <tx:annotation-driven transaction-manager="transactionManager"/>
       
       <!-- 配置远程服务的代理对象 -->
		<bean id="customerService" class="org.springframework.remoting.caucho.HessianProxyFactoryBean">
			<!-- 注入接口类型 -->
			<property name="serviceInterface" value="com.itheima.bos.crm.CustomerService"/>
			<!-- 服务访问路径 -->
			<property name="serviceUrl" value="http://localhost:8080/crm/remoting/customer"/>
		</bean>
		<!-- 配置一工厂shiro框架用到过滤器bean -->
		<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
			<!-- 注入安全管理器 -->
			<property name="securityManager" ref="securityManager"></property>
			<!-- 注入当前系统的登录页面 -->
			<property name="loginUrl" value="/login.jsp"></property>
			<!-- 注入成功页面 -->
			<property name="successUrl" value="/index.jsp"></property>
			<!-- 诸如权限不足提示页面 -->
			<property name="unauthorizedUrl" value="/unauthorizedUrl.jsp"></property>
			<!-- 注入URL拦截规则 -->
			<property name="filterChainDefinitions">
				<value>
					/css/** = anon
					/images/** = anon
					/js/** = anon
					/login.jsp* =anon
					/validatecode.jsp* =anon
					/userAction_login.action = anon
					/page_base_staff.action = perms["staff"]
					/* = authc
				</value>
			</property>
		</bean>
		<!-- 注册自定义realm -->
		<bean id="bosRealm" class="com.itheima.bos.shiro.BOSRealm"></bean>
		
		<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
			<!-- 注入上面的realm -->
			<property name="realm" ref="bosRealm"/>
			<!-- 注册缓存管理器 -->
			<property name="cacheManager" ref="cacheManager"/>
		</bean>
		
		<!-- 注册缓存管理器 -->
		<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
			<!-- 注册ehcache配置文件 -->
			<property name="cacheManagerConfigFile" value="classpath:ehcache.xml"></property>
		</bean>
		<!-- 开启shiro注解 -->
		<!-- 自动代理 -->
		<bean id="defaultAdvisorAutoProxyCreator" class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
			<!-- 强制使用cglib为Action创建代理对象 -->
			<property name="proxyTargetClass" value="true"></property>
		</bean>
		
		<!-- 切面类 -->
		<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"></bean>
</beans>