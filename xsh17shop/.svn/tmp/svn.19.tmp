package com.bdqn.web;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.List;
import java.util.Random;
import java.util.UUID;

import javax.mail.MessagingException;
import javax.mail.internet.AddressException;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts2.ServletActionContext;
import org.springframework.context.annotation.Scope;

import com.bdqn.common.PageBean;
import com.bdqn.entity.User;
import com.bdqn.service.UserService;
import com.bdqn.util.MailUitls;
import com.opensymphony.xwork2.ActionContext;
import com.opensymphony.xwork2.ActionSupport;
import com.opensymphony.xwork2.ModelDriven;
import com.sun.media.jfxmedia.control.VideoDataBuffer;

public class UserAction extends ActionSupport implements ModelDriven<User>{

	private UserService userService;
	
	private User user=new User();
	
	private Integer page=1;

	public String findAll(){
		PageBean<User> pageBean = userService.findByPage(page);
		//显示到页面
		ActionContext.getContext().getValueStack().set("pageBean", pageBean);
		return "findAll";
	}
	
	public String saveOrUpdate(){
		userService.saveOrUpdate(user);
		return "saveSuccess";
	}
	
	public String delete(int id){
		userService.delete(id);
		return "saveSuccess";
	}
	public String edit(){
		return "editSuccess";
	}
	public String registPage(){
		return "registPage";
	}
	public String loginPage(){
		return "loginPage";
	}
	
	private String checkcode;
	
	
	public void setCheckcode(String checkcode) {
		this.checkcode = checkcode;
	}
	public String regist() throws AddressException, MessagingException{
		String checkCode1=(String) ServletActionContext.getRequest().getSession().getAttribute("checkCode");
		if (!checkcode.equalsIgnoreCase(checkCode1)) {
			this.addActionError("验证码输入错误!");
			return "checkcodeFail";
		}
		String code=UUID.randomUUID().toString();
		user.setCode(code);
		MailUitls.sendMail(user.getEmail(), code);
		saveOrUpdate();
		this.addActionMessage("注册成功!请去邮箱激活!");
		return "msg";
	}
	
	public String active(){
		User existUser = userService.findByUserCode(user.getCode());
		if(existUser!=null){
			user.setState(1);
			user.setCode(null);
			userService.saveOrUpdate(user);
			this.addActionMessage("激活成功！请去登录！");
		}else{
			this.addActionMessage("激活失败！激活码错误！");
		}
		return "msg";
		
	}
	
	/**
	 * 用户登录
	 * @return
	 * @throws IOException
	 */
	public String login(){
		User existUser = userService.findByUserName(user.getUsername());
		if(existUser.getPassword().equals(user.getPassword())){
			ServletActionContext.getRequest().getSession().setAttribute("existUser", existUser);;
			return "index";
		}else{
			this.addActionError("用户或者密码错误！");
			return "loginPage";
		}
	}
	public String findByName() throws IOException{
		User existUser = userService.findByUserName(user.getUsername());
		HttpServletResponse response = ServletActionContext.getResponse();
		/*response.setHeader("content-type","text/html;charset=UTF-8");
		response.setCharacterEncoding("UTF-8");*/
		PrintWriter out = response.getWriter();
		
		if(existUser!=null){
			out.print("1");
			/*this.addActionError("用户名已经存在！");*/
		}else{
			out.println();
			/*this.addActionError("用户名可以使用！");*/
		}
		return NONE;
	}
	
	
	public String quit(){
		ServletActionContext.getRequest().getSession().invalidate();
		return "quit";
	}
	
	public void setUserService(UserService userService) {
		this.userService = userService;
	}
	public User getUser() {
		return user;
	}
	public void setUser(User user) {
		this.user = user;
	}
	
	@Override
	public User getModel() {
		return user;
	}

	public Integer getPage() {
		return page;
	}

	public void setPage(Integer page) {
		this.page = page;
	}
}
